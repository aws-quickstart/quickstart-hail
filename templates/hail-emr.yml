AWSTemplateFormatVersion: "2010-09-09"
Description: "EMR with Hail and VEP (qs-1qp776mgo)"


Parameters:

  pAmi:
    Description: "(Optional) Hail AMI ID. Check the github repo for public AMI IDs. Build your own AMI through the Hail Quick Start's Code Build mechanism. Or leave it blank to use the latest public Hail AMI with VEP."
    Type: "String"

  pAllowSsmShell:
    AllowedValues:
      - "false"
      - "true"
    Default: "true"
    Description: "Allow shell access to nodes in the EMR cluster through Amazon SSM. Must also be set to true when launching Hail SageMaker JupyterLab stacks."
    Type: "String"

  pClusterName:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    Description: "Name to use for tagging resources"
    MinLength: 3
    Type: "String"

  pEmrCoreInstanceCount:
    Default: 1
    Description: "Enter the number of EMR core nodes. Minimum is 1. "
    MinValue: 1 # Cannot be 0.
    Type: "Number"

  pEmrCoreInstanceDataVolSize:
    Default: "100"
    Description: "Allocated storage of EBS GP2 data volumes for core nodes (in GB)."
    MaxValue: "2000"
    MinValue: "20"
    Type: "Number"

  pEmrCoreInstanceSize:
    AllowedValues:
      - "c1.medium"
      - "c1.xlarge"
      - "c3.xlarge"
      - "c3.2xlarge"
      - "c3.4xlarge"
      - "c3.8xlarge"
      - "c4.large"
      - "c4.xlarge"
      - "c4.2xlarge"
      - "c4.4xlarge"
      - "c4.8xlarge"
      - "c5.xlarge"
      - "c5.2xlarge"
      - "c5.4xlarge"
      - "c5.9xlarge"
      - "c5.18xlarge"
      - "cc2.8xlarge"
      - "cg1.4xlarge"
      - "cr1.8xlarge"
      - "d2.xlarge"
      - "d2.2xlarge"
      - "d2.4xlarge"
      - "d2.8xlarge"
      - "g2.2xlarge"
      - "hi1.4xlarge"
      - "hs1.8xlarge"
      - "i2.xlarge"
      - "i2.2xlarge"
      - "i2.4xlarge"
      - "i2.8xlarge"
      - "i3.xlarge"
      - "i3.2xlarge"
      - "i3.4xlarge"
      - "i3.8xlarge"
      - "i3.16xlarge"
      - "m1.medium"
      - "m1.large"
      - "m1.xlarge"
      - "m2.xlarge"
      - "m2.2xlarge"
      - "m2.4xlarge"
      - "m3.xlarge"
      - "m3.2xlarge"
      - "m4.large"
      - "m4.xlarge"
      - "m4.2xlarge"
      - "m4.4xlarge"
      - "m4.10xlarge"
      - "m4.16xlarge"
      - "m5.xlarge"
      - "m5.2xlarge"
      - "m5.4xlarge"
      - "m5.12xlarge"
      - "m5.24xlarge"
      - "p2.xlarge"
      - "p2.8xlarge"
      - "p2.16xlarge"
      - "p3.2xlarge"
      - "p3.8xlarge"
      - "p3.16xlarge"
      - "r3.xlarge"
      - "r3.2xlarge"
      - "r3.4xlarge"
      - "r3.8xlarge"
      - "r4.xlarge"
      - "r4.2xlarge"
      - "r4.4xlarge"
      - "r4.8xlarge"
      - "r4.16xlarge"
      - "r5.xlarge"
      - "r5.2xlarge"
      - "r5.4xlarge"
      - "r5.12xlarge"
      - "r5a.xlarge"
      - "r5a.2xlarge"
      - "r5a.4xlarge"
      - "r5a.12xlarge"
      - "r5a.24xlarge"
      - "r5d.xlarge"
      - "r5d.2xlarge"
      - "r5d.4xlarge"
      - "r5d.12xlarge"
      - "r5d.24xlarge"
    Default: "r5.xlarge"
    Description: "Core node instance sizes."
    Type: "String"

  pEmrInstanceRootVolSize:
    Default: "100"
    Description: "Allocated storage for EBS root volumes for all cluster instances (in GB)."
    MaxValue: "100"
    MinValue: "10"
    Type: "Number"

  pEmrInstanceTerminationProtection:
    AllowedValues:
      - "true"
      - "false"
    Default: "false"
    Description: "Applies to Master and Core Nodes in the cluster."
    Type: "String"

  pEmrMasterInstanceSize:
    AllowedValues:
      - "c1.medium"
      - "c1.xlarge"
      - "c3.xlarge"
      - "c3.2xlarge"
      - "c3.4xlarge"
      - "c3.8xlarge"
      - "c4.large"
      - "c4.xlarge"
      - "c4.2xlarge"
      - "c4.4xlarge"
      - "c4.8xlarge"
      - "c5.xlarge"
      - "c5.2xlarge"
      - "c5.4xlarge"
      - "c5.9xlarge"
      - "c5.18xlarge"
      - "cc2.8xlarge"
      - "cg1.4xlarge"
      - "cr1.8xlarge"
      - "d2.xlarge"
      - "d2.2xlarge"
      - "d2.4xlarge"
      - "d2.8xlarge"
      - "g2.2xlarge"
      - "hi1.4xlarge"
      - "hs1.8xlarge"
      - "i2.xlarge"
      - "i2.2xlarge"
      - "i2.4xlarge"
      - "i2.8xlarge"
      - "i3.xlarge"
      - "i3.2xlarge"
      - "i3.4xlarge"
      - "i3.8xlarge"
      - "i3.16xlarge"
      - "m1.medium"
      - "m1.large"
      - "m1.xlarge"
      - "m2.xlarge"
      - "m2.2xlarge"
      - "m2.4xlarge"
      - "m3.xlarge"
      - "m3.2xlarge"
      - "m4.large"
      - "m4.xlarge"
      - "m4.2xlarge"
      - "m4.4xlarge"
      - "m4.10xlarge"
      - "m4.16xlarge"
      - "m5.xlarge"
      - "m5.2xlarge"
      - "m5.4xlarge"
      - "m5.12xlarge"
      - "m5.24xlarge"
      - "p2.xlarge"
      - "p2.8xlarge"
      - "p2.16xlarge"
      - "p3.2xlarge"
      - "p3.8xlarge"
      - "p3.16xlarge"
      - "r3.xlarge"
      - "r3.2xlarge"
      - "r3.4xlarge"
      - "r3.8xlarge"
      - "r4.xlarge"
      - "r4.2xlarge"
      - "r4.4xlarge"
      - "r4.8xlarge"
      - "r4.16xlarge"
      - "r5.xlarge"
      - "r5.2xlarge"
      - "r5.4xlarge"
      - "r5.12xlarge"
      - "r5a.xlarge"
      - "r5a.2xlarge"
      - "r5a.4xlarge"
      - "r5a.12xlarge"
      - "r5a.24xlarge"
      - "r5d.xlarge"
      - "r5d.2xlarge"
      - "r5d.4xlarge"
      - "r5d.12xlarge"
      - "r5d.24xlarge"
    Default: "m5.xlarge"
    Type: "String"
    Description: "Master node instance size."

  pEmrMinTaskNodeCount:
    Default: 1
    Description: "Minimum number of EMR task nodes. Changing this to 0 disables task nodes and auto scaling."
    Type: "Number"

  pEmrMaxTaskNodeCount:
    Default: 1
    Description: "Maximum number of EMR task nodes. Must be equal to or greater than minimum. (Minimum is 1, Maximum is 2)"
    MaxValue: 50
    Type: "Number"

  pEmrTaskNodeSize:
    AllowedValues:
      - "c1.medium"
      - "c1.xlarge"
      - "c3.xlarge"
      - "c3.2xlarge"
      - "c3.4xlarge"
      - "c3.8xlarge"
      - "c4.large"
      - "c4.xlarge"
      - "c4.2xlarge"
      - "c4.4xlarge"
      - "c4.8xlarge"
      - "c5.xlarge"
      - "c5.2xlarge"
      - "c5.4xlarge"
      - "c5.9xlarge"
      - "c5.18xlarge"
      - "cc2.8xlarge"
      - "cg1.4xlarge"
      - "cr1.8xlarge"
      - "d2.xlarge"
      - "d2.2xlarge"
      - "d2.4xlarge"
      - "d2.8xlarge"
      - "g2.2xlarge"
      - "hi1.4xlarge"
      - "hs1.8xlarge"
      - "i2.xlarge"
      - "i2.2xlarge"
      - "i2.4xlarge"
      - "i2.8xlarge"
      - "i3.xlarge"
      - "i3.2xlarge"
      - "i3.4xlarge"
      - "i3.8xlarge"
      - "i3.16xlarge"
      - "m1.medium"
      - "m1.large"
      - "m1.xlarge"
      - "m2.xlarge"
      - "m2.2xlarge"
      - "m2.4xlarge"
      - "m3.xlarge"
      - "m3.2xlarge"
      - "m4.large"
      - "m4.xlarge"
      - "m4.2xlarge"
      - "m4.4xlarge"
      - "m4.10xlarge"
      - "m4.16xlarge"
      - "m5.xlarge"
      - "m5.2xlarge"
      - "m5.4xlarge"
      - "m5.12xlarge"
      - "m5.24xlarge"
      - "p2.xlarge"
      - "p2.8xlarge"
      - "p2.16xlarge"
      - "p3.2xlarge"
      - "p3.8xlarge"
      - "p3.16xlarge"
      - "r3.xlarge"
      - "r3.2xlarge"
      - "r3.4xlarge"
      - "r3.8xlarge"
      - "r4.xlarge"
      - "r4.2xlarge"
      - "r4.4xlarge"
      - "r4.8xlarge"
      - "r4.16xlarge"
      - "r5.xlarge"
      - "r5.2xlarge"
      - "r5.4xlarge"
      - "r5.12xlarge"
      - "r5a.xlarge"
      - "r5a.2xlarge"
      - "r5a.4xlarge"
      - "r5a.12xlarge"
      - "r5a.24xlarge"
      - "r5d.xlarge"
      - "r5d.2xlarge"
      - "r5d.4xlarge"
      - "r5d.12xlarge"
      - "r5d.24xlarge"
    Default: "r5.xlarge"
    Description: "Task node instance sizes."
    Type: "String"

  pEmrReleaseLabel:
    AllowedValues:
      - "emr-5.29.0"
    Default: "emr-5.29.0"
    Description: "Only one version of EMR is currently supported."
    Type: "String"

  pKmsEbsArn:
    Description: "(Optional) If the source AMI is encrypted, specify the full key ARN."
    Default: ""
    Type: "String"

  pLivyAccessSecurityGroup:
    Description: "This parameter is pulled from AWS Parameter Store. No changes should be necessary. Security Group ID that will be allowed access to the master node on port 8998."
    Default: "/hail/sagemaker/security-group-id"
    Type: "AWS::SSM::Parameter::Value<String>"

  pHailBucket:
    Description: "This parameter is pulled from AWS Parameter Store. No changes should be necessary. Cluster Manifests will be put here on cluster launch under /manifests."
    Default: "/hail/s3/hail"
    Type: "AWS::SSM::Parameter::Value<String>"

  pSubnetId:
    Description: "This parameter is pulled from AWS Parameter Store. No changes should be necessary. Nodes will be deployed in this subnet."
    Default: "/hail/vpc/subnet-id"
    Type: "AWS::SSM::Parameter::Value<String>"

  pTagEnvironment:
    AllowedValues:
      - "production"
      - "staging"
      - "development"
    Default: "development"
    Description: "Environment tag to associate with EMR resources."
    Type: "String"

  pTagOwner:
    Default: ""
    Description: "(Optional) Owner tag to associate with resources. Person/Department, etc."
    Type: "String"

  pTaskNodeMarket:
    AllowedValues:
      - "ON_DEMAND"
      - "SPOT"
    Default: "ON_DEMAND"
    Description: "Choosing 'SPOT' will launch task nodes using spot instances."
    Type: "String"

  pVpcId:
    Description: "This parameter is pulled from AWS Parameter Store. No changes should be necessary. The ID of the VPC to deploy EMR clusters in."
    Default: "/hail/vpc/id"
    Type: "AWS::SSM::Parameter::Value<String>"

Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Network details"
        Parameters:
          - "pVpcId"
          - "pSubnetId"
          - "pLivyAccessSecurityGroup"
      - Label:
          default: "Cluster primary settings"
        Parameters:
          - "pClusterName"
          - "pAmi"
          - "pEmrInstanceRootVolSize"
          - "pEmrInstanceTerminationProtection"
          - "pEmrReleaseLabel"
          - "pKmsEbsArn"
          - "pAllowSsmShell"
      - Label:
          default: "EMR master node instance settings"
        Parameters:
          - "pEmrMasterInstanceSize"
      - Label:
          default: "Core instance settings"
        Parameters:
          - "pEmrCoreInstanceCount"
          - "pEmrCoreInstanceSize"
          - "pEmrCoreInstanceDataVolSize"
      - Label:
          default: "Auto scaling task node settings"
        Parameters:
          - "pTaskNodeMarket"
          - "pEmrMinTaskNodeCount"
          - "pEmrMaxTaskNodeCount"
          - "pEmrTaskNodeSize"
      - Label:
          default: "Tagging"
        Parameters:
          - "pTagEnvironment"
          - "pTagOwner"
    ParameterLabels:
      pAllowSsmShell:
        default: "Allow SSM shell access from SageMaker notebook instances"
      pAmi:
        default: "Hail AMI ID"
      pClusterName:
        default: "EMR cluster name"
      pEmrCoreInstanceCount:
        default: "Number of EMR core nodes"
      pEmrCoreInstanceDataVolSize:
        default: "Scratch volume size for EMR core nodes"
      pEmrCoreInstanceSize:
        default: "Core node instance size"
      pEmrInstanceRootVolSize:
        default: "EMR node root volume size"
      pEmrInstanceTerminationProtection:
        default: "Enable EMR instance termination protection"
      pEmrMasterInstanceSize:
        default: "Master node instance size"
      pEmrReleaseLabel:
        default: "EMR release"
      pEmrMinTaskNodeCount:
        default: "Minimum number of EMR task nodes"
      pEmrMaxTaskNodeCount:
        default: "Maximum number of EMR task nodes"
      pEmrTaskNodeSize:
        default: "Task node instance size"
      pKmsEbsArn:
        default: "EBS KMS key ARN"
      pLivyAccessSecurityGroup:
        default: "Livy access security group ID"
      pHailBucket:
        default: "S3 bucket name with Hail artifiacts"
      pSubnetId:
        default: "Target subnet ID for EMR cluster"
      pTagEnvironment:
        default: "Environment Tag"
      pTagOwner:
        default: "Owner Tag"
      pTaskNodeMarket:
        default: "Market"
      pVpcId:
        default: "VPC ID"

Mappings:

  Region:
    eu-north-1:
      ami: 'ami-0097c8916181505c5'
    ap-south-1:
      ami: 'ami-0cc18a6e8cf105185'
    eu-west-3:
      ami: 'ami-09f35326ba84d2ee0'
    eu-west-2:
      ami: 'ami-04bbc6780b6719abe'
    eu-west-1:
      ami: 'ami-05adfeb1ffea4f488'
    ap-northeast-2:
      ami: 'ami-0fac2662a22702e92'
    ap-northeast-1:
      ami: 'ami-0a2a15ed71805f23d'
    sa-east-1:
      ami: 'ami-0ea74a00f1109fe14'
    ca-central-1:
      ami: 'ami-052c9e8e247ad39b1'
    ap-southeast-1:
      ami: 'ami-07124736552a4152b'
    ap-southeast-2:
      ami: 'ami-0fa25f9d65099152c'
    eu-central-1:
      ami: 'ami-0a9294d79a555d742'
    us-east-1:
      ami: 'ami-0f33e21674eed03c6'
    us-east-2:
      ami: 'ami-03cc99a0a57b9a8f4'
    us-west-1:
      ami: 'ami-0ed287d132c16a457'
    us-west-2:
      ami: 'ami-083d074beb4c62cfc'

Conditions:

  CondEnableEncryption: !Not [ !Equals [ !Ref pKmsEbsArn, "" ] ]
  CondCreateTaskNodes:  !Not [ !Equals [ !Ref pEmrMaxTaskNodeCount, "0" ] ]
  CondCustomAmi: !Not [ !Equals [ !Ref pAmi, "" ] ]

Resources:

  cluster:
    Type: "AWS::EMR::Cluster"
    Properties:
      Applications:
        - Name: "Ganglia"
        - Name: "Hadoop"
        - Name: "Hive"
        - Name: "Livy"
        - Name: "Spark"
      AutoScalingRole: !Ref roleEmrAutoScaling
      BootstrapActions:
        - Name: pythonDateutilReinstall
          ScriptBootstrapAction:
            Path: "file:/usr/bin/sudo"
            Args:
              - "python3"
              - "-m"
              - "pip"
              - "install"
              - "-I"
              - "python-dateutil"
      Configurations:
        - Classification: "spark"
          ConfigurationProperties:
            maximizeResourceAllocation: "true"
        - Classification: "spark-defaults"
          ConfigurationProperties:
            spark.driver.extraClassPath: "/usr/lib/hadoop-lzo/lib/*:/usr/lib/hadoop/hadoop-aws.jar:/usr/share/aws/aws-java-sdk/*:/usr/share/aws/emr/emrfs/conf:/usr/share/aws/emr/emrfs/lib/*:/usr/share/aws/emr/emrfs/auxlib/*:/usr/share/aws/emr/goodies/lib/emr-spark-goodies.jar:/usr/share/aws/emr/security/conf:/usr/share/aws/emr/security/lib/*:/usr/share/aws/hmclient/lib/aws-glue-datacatalog-spark-client.jar:/usr/share/java/Hive-JSON-Serde/hive-openx-serde.jar:/usr/share/aws/sagemaker-spark-sdk/lib/sagemaker-spark-sdk.jar:/usr/share/aws/emr/s3select/lib/emr-s3-select-spark-connector.jar:/opt/hail/hail-all-spark.jar"
            spark.executor.extraClassPath: "/usr/lib/hadoop-lzo/lib/*:/usr/lib/hadoop/hadoop-aws.jar:/usr/share/aws/aws-java-sdk/*:/usr/share/aws/emr/emrfs/conf:/usr/share/aws/emr/emrfs/lib/*:/usr/share/aws/emr/emrfs/auxlib/*:/usr/share/aws/emr/goodies/lib/emr-spark-goodies.jar:/usr/share/aws/emr/security/conf:/usr/share/aws/emr/security/lib/*:/usr/share/aws/hmclient/lib/aws-glue-datacatalog-spark-client.jar:/usr/share/java/Hive-JSON-Serde/hive-openx-serde.jar:/usr/share/aws/sagemaker-spark-sdk/lib/sagemaker-spark-sdk.jar:/usr/share/aws/emr/s3select/lib/emr-s3-select-spark-connector.jar:/opt/hail/hail-all-spark.jar"
            spark.serializer: "org.apache.spark.serializer.KryoSerializer"
            spark.kryo.registrator: "is.hail.kryo.HailKryoRegistrator"
        - Classification: "livy-conf"
          ConfigurationProperties:
            livy.file.local-dir-whitelist: "/home/hadoop/"
            livy.server.session.timeout: "168h"          # 1 week
            livy.server.session.timeout-check: "false"   # Do not terminate idle sessions
        - Classification: "spark-env"
          Configurations:
            - Classification: "export"
              ConfigurationProperties:
                PYSPARK_PYTHON: "/usr/bin/python3"
        - Classification: "yarn-env"
          Configurations:
            - Classification: "export"
              ConfigurationProperties:
                PYSPARK_PYTHON: "/usr/bin/python3"
        - Classification: "yarn-site"
          ConfigurationProperties:
            yarn.log-aggregation.retain-seconds: "3600"
        - Classification: "emrfs-site"
          ConfigurationProperties:
            fs.s3.maxConnections: "1000"
      CustomAmiId: !If
        - CondCustomAmi
        - !Ref pAmi
        - !FindInMap [ Region, !Ref "AWS::Region", ami ]
      EbsRootVolumeSize: !Ref pEmrInstanceRootVolSize
      Instances:
        AdditionalMasterSecurityGroups:
          - !Ref sgEmrMasterAccess
        AdditionalSlaveSecurityGroups:
          - !Ref sgEmrSlaveAccess
        Ec2SubnetId: !Ref pSubnetId
        MasterInstanceGroup:
          InstanceCount: 1
          InstanceType: !Ref pEmrMasterInstanceSize
          Market: "ON_DEMAND"
          Name: "Master Instance Group"
        CoreInstanceGroup:
          InstanceCount: !Ref pEmrCoreInstanceCount
          InstanceType: !Ref pEmrCoreInstanceSize
          Market: "ON_DEMAND"
          Name: "Core Instance Group"
          EbsConfiguration:
            EbsBlockDeviceConfigs:
              - VolumeSpecification:
                  SizeInGB: !Ref pEmrCoreInstanceDataVolSize
                  VolumeType: "gp2"
                VolumesPerInstance: 1
        TerminationProtected: !Ref pEmrInstanceTerminationProtection
      JobFlowRole: !Ref instanceProfileEmrEc2
      LogUri: !Join ["", ["s3://", !Ref pHailBucket, "/elasticmapreduce/"]]
      Name: !Ref pClusterName
      ReleaseLabel: !Ref pEmrReleaseLabel
      ServiceRole: !Ref roleEmr
      Steps:
        - ActionOnFailure: "CONTINUE"
          HadoopJarStep:
            Args:
              - "sudo"
              - "mkdir"
              - "-p"
              - "/var/www/html/plots"
            Jar: "command-runner.jar"
          Name: "hailApachePlotDir"
        - ActionOnFailure: "CONTINUE"
          HadoopJarStep:
            Args:
              - "sudo"
              - "ln"
              - "-s"
              - "/var/www/html/plots"
              - "/plots"
            Jar: "command-runner.jar"
          Name: "hailMainPlotDir"
        - ActionOnFailure: "CONTINUE"
          HadoopJarStep:
            Args:
              - "sudo"
              - "chown"
              - "livy:livy"
              - "/var/www/html/plots"
            Jar: "command-runner.jar"
          Name: "hailLivyPlotOwnership"
        - ActionOnFailure: "CONTINUE"
          HadoopJarStep:
            Args:
              - "sudo"
              - "bash"
              - "-c"
              - "if test -d /opt/vep/; then chown -R hadoop:hadoop /opt/vep; fi"
            Jar: "command-runner.jar"
          Name: "vepOwnership"
        - ActionOnFailure: "CONTINUE"
          HadoopJarStep:
            Args:
              - "sudo"
              - "bash"
              - "-c"
              - "echo 'livy.rsc.launcher.port.range 10500~10550' > /etc/livy/conf/livy-client.conf"
            Jar: "command-runner.jar"
          Name: "livyRscExpandPortRange"
        - ActionOnFailure: "CONTINUE"
          HadoopJarStep:
            Args:
              - "/usr/local/bin/cluster_manifest.sh"
            Jar: "command-runner.jar"
          Name: "clusterManifestToS3"
      Tags:
        - Key: "Name"
          Value: !Ref pClusterName
        - Key: "environment"
          Value: !Ref pTagEnvironment
        - Key: "owner"
          Value: !Ref pTagOwner
        - Key: "allow-emr-ssm"
          Value: !Ref pAllowSsmShell
      VisibleToAllUsers: true

  instanceGroupTaskNodes:
    Condition: "CondCreateTaskNodes"
    Type: "AWS::EMR::InstanceGroupConfig"
    Properties:
      AutoScalingPolicy:
        Constraints:
          MaxCapacity: !Ref pEmrMaxTaskNodeCount
          MinCapacity: !Ref pEmrMinTaskNodeCount
        Rules:
          - Action:
              SimpleScalingPolicyConfiguration:
                AdjustmentType: "CHANGE_IN_CAPACITY"
                CoolDown: 300
                ScalingAdjustment: 2
            Description: "Add 2 instances when YARN available memory < 15%"
            Name: "yarnMemoryUseHigh"
            Trigger:
              CloudWatchAlarmDefinition:
                ComparisonOperator: "LESS_THAN"
                Dimensions:
                  - Key: "JobFlowId"
                    Value: !Ref cluster
                EvaluationPeriods: 1
                MetricName: "YARNMemoryAvailablePercentage"
                Namespace: "AWS/ElasticMapReduce"
                Period: 300
                Statistic: "AVERAGE"
                Threshold: 15.0
                Unit: "PERCENT"
          - Action:
              SimpleScalingPolicyConfiguration:
                AdjustmentType: "CHANGE_IN_CAPACITY"
                CoolDown: 300
                ScalingAdjustment: 2
            Description: "Add 2 instances when pending container ratio > .75"
            Name: "pendingContainerHigh"
            Trigger:
              CloudWatchAlarmDefinition:
                ComparisonOperator: "GREATER_THAN"
                Dimensions:
                  - Key: "JobFlowId"
                    Value: !Ref cluster
                EvaluationPeriods: 1
                MetricName: "ContainerPendingRatio"
                Namespace: "AWS/ElasticMapReduce"
                Period: 300
                Statistic: "AVERAGE"
                Threshold: 0.75
                Unit: "COUNT"
          - Action:
              SimpleScalingPolicyConfiguration:
                AdjustmentType: "CHANGE_IN_CAPACITY"
                CoolDown: 900
                ScalingAdjustment: -2
            Description: "Remove 2 instances when YARN available memory > 75%"
            Name: "yarnMemoryUseLow"
            Trigger:
              CloudWatchAlarmDefinition:
                ComparisonOperator: "GREATER_THAN"
                Dimensions:
                  - Key: "JobFlowId"
                    Value: !Ref cluster
                EvaluationPeriods: 3
                MetricName: "YARNMemoryAvailablePercentage"
                Namespace: "AWS/ElasticMapReduce"
                Period: 300
                Statistic: "AVERAGE"
                Threshold: 80
                Unit: "PERCENT"
      InstanceCount: !Ref pEmrMinTaskNodeCount
      InstanceRole: "TASK"
      InstanceType: !Ref pEmrTaskNodeSize
      JobFlowId: !Ref cluster
      Market: !Ref pTaskNodeMarket
      Name: "Task Instance Group"

  instanceProfileEmrEc2:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref roleEmrEc2
      InstanceProfileName: !Ref roleEmrEc2

  policyEc2EbsEncryption:
    Condition: "CondEnableEncryption"
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "allowEbsGenerateDataKey"
            Action: "kms:GenerateDataKey"
            Effect: "Allow"
            Resource: !Ref pKmsEbsArn
      PolicyName: "kms-ebs-generate-data-key"
      Roles:
        - !Ref roleEmrEc2

  policyEmrEbsEncryption:
    Condition: "CondEnableEncryption"
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "allowEbsGenerateDataKey"
            Action:
              - "kms:CreateGrant"
              - "kms:Decrypt"
              - "kms:DescribeKey"
              - "kms:Encrypt"
              - "kms:GenerateDataKeyWithoutPlaintext"
              - "kms:ReEncrypt*"
            Effect: "Allow"
            Resource: !Ref pKmsEbsArn
      PolicyName: "kms-ebs-access"
      Roles:
        - !Ref roleEmr

  roleEmr:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2008-10-17"
        Statement:
          - Sid: ""
            Effect: "Allow"
            Principal:
              Service: "elasticmapreduce.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole"
      RoleName: !Join ["-", ["emr-cluster", !Ref pClusterName]]

  roleEmrEc2:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2008-10-17"
        Statement:
          - Sid: ""
            Effect: "Allow"
            Principal:
              Service: "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role"
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      Path: "/"
      Policies:
        - PolicyName: "s3ManifestPutObject"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "s3:PutObject"
                Resource: !Join [ "", ["arn:aws:s3:::", !Ref pHailBucket, ":/manifests/*"]]
        - PolicyName: "cloudformationDescribeStack"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "cloudformation:DescribeStacks"
                Resource: !Ref "AWS::StackId"
      RoleName: !Join ["-",["emr-ec2", !Ref pClusterName]]

  roleEmrAutoScaling:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2008-10-17"
        Statement:
          - Sid: ""
            Effect: "Allow"
            Principal:
              Service:
                - "elasticmapreduce.amazonaws.com"
                - "application-autoscaling.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforAutoScalingRole"
      RoleName: !Join ["-", ["emr-autoscaling", !Ref pClusterName]]

  # Add full ingress from master.  Separate from in group rules to prevent cyclical dependencies.
  sgIngressEmrMaster:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
      GroupId: !Ref sgEmrSlaveAccess
      IpProtocol: "-1"
      FromPort: -1
      ToPort: -1
      SourceSecurityGroupId: !Ref sgEmrMasterAccess
      Description: "Full Ingress from master node"

  sgEmrMasterAccess:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: !Join ["-",["emr-master", !Ref pClusterName]]
      GroupDescription: "emr master node access"
      VpcId: !Ref pVpcId
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 8998
          ToPort: 8998
          SourceSecurityGroupId: !Ref pLivyAccessSecurityGroup
          Description: "Livy Access"
        - IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref pLivyAccessSecurityGroup
          Description: "HTTP for notebook Hail plot retrieval"
        - IpProtocol: "-1"
          FromPort: -1
          ToPort: -1
          SourceSecurityGroupId: !Ref sgEmrSlaveAccess
          Description: "Full Ingress from slave nodes"
      SecurityGroupEgress:
        - IpProtocol: "-1"
          FromPort: -1
          ToPort: -1
          CidrIp: "0.0.0.0/0"
          Description: "all"
      Tags:
        - Key: "Name"
          Value: !Join ["-",["emr-master", !Ref pClusterName]]
        - Key: "managed-by"
          Value: "cloudformation"
        - Key: "environment"
          Value: !Ref pTagEnvironment
        - Key: "owner"
          Value: !Ref pTagOwner

  sgEmrSlaveAccess:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: !Join ["-",["emr-slave", !Ref pClusterName]]
      GroupDescription: "emr slave node access"
      VpcId: !Ref pVpcId
      SecurityGroupEgress:
        - IpProtocol: "-1"
          FromPort: -1
          ToPort: -1
          CidrIp: "0.0.0.0/0"
          Description: "all"
      Tags:
        - Key: "Name"
          Value: !Join ["-",["emr-slave", !Ref pClusterName]]
        - Key: "managed-by"
          Value: "cloudformation"
        - Key: "environment"
          Value: !Ref pTagEnvironment
        - Key: "owner"
          Value: !Ref pTagOwner

Outputs:

  url:
    Description: "Console Cluster URL"
    Value: !Sub "https://console.aws.amazon.com/elasticmapreduce/home?region=${AWS::Region}#cluster-details:${cluster}"

  clusterId:
    Description: "Cluster ID"
    Value: !Ref cluster
